#!/usr/bin/python3

from __future__ import print_function

import re as _re
import sqlparse as _sqlparse

def pretty_sql(sql):
    # get the indentation of the first line, so we can inject it into the sql
    # statement later
    indent = _re.match(r"\s*", sql).group()

    # strip sql termination, to format() does not generate a second empty statement
    # which produces silly newlines
    (sql, term_subs) = _re.subn(r";\s*$", "", sql)

    sql = indent + _sqlparse.format(
        sql,
        identifier_case = 'lower',
        indent_width = 4,
        keyword_case = 'upper',
        reindent = True,
        use_space_around_operator = True,
    ).replace("\n", "\n" + indent)

    # remove empty lines
    sql = _re.sub(r"^\s*\n", "", sql, _re.MULTILINE)

    # append statement terminator on a seperate line, if one was specified
    if term_subs:
        sql += "\n" + indent + ";"

    return sql


if __name__ == '__main__':
    import sys as _sys
    print(pretty_sql(_sys.stdin.read()))
